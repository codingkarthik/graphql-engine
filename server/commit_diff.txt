commit 0ae53841156800dcf8758ed1a861e87dbb10fe11
Author: Phil Freeman <phil@hasura.io>
Date:   Thu Jul 23 13:39:26 2020 -0700

    Propagate the trace context to event triggers (#5409)

    * Propagate the trace context to event triggers

    * Handle missing trace and span IDs

    * Store trace context as one LOCAL

    * Add migrations

    * Documentation

    * changelog

    * Fix warnings

    * Respond to code review suggestions

    * Respond to code review

    * Undo changelog

    * Update CHANGELOG.md

    Co-authored-by: Vamshi Surabhi <0x777@users.noreply.github.com>

commit 2eab6a89aa7d00152dc5b10986f06937c8e6f71f
Author: Brandon Simmons <brandon.m.simmons@gmail.com>
Date:   Mon Jul 20 22:28:12 2020 -0400

    Fix latency buckets for telemetry data

    These must have gotten messed up during a refactor. As a consequence
    almost all samples received so far fall into the single erroneous 0 to
    1K seconds (originally supposed to be 1ms?) bucket.

    I also re-thought what the numbers should be, but these are still
    arbitrary and might want adjusting in the future.

commit 709460b9ce9cfc11309afe362f81d3db1e548a38
Author: Tirumarai Selvan <tiru@hasura.io>
Date:   Mon Jul 20 13:45:15 2020 +0530

    update pg-client (#5421)

commit 1eb36bbbb30b79f38a0c7408ecec88f4b2a94cd6 (origin-hasura/master, master)
Author: Anon Ray <ecthiender@users.noreply.github.com>
Date:   Thu Jul 16 18:49:42 2020 +0530

    server: refactor 'pollQuery' to have a hook to process 'PollDetails' (#5391)

    Co-authored-by: Vamshi Surabhi <0x777@users.noreply.github.com>

commit 0dddbe9e9d519de98662643d66c7d04a45d8d670
Author: Phil Freeman <phil@hasura.io>
Date:   Wed Jul 15 03:40:48 2020 -0700

    Add MonadTrace and MonadExecuteQuery abstractions (#5383)

    Co-authored-by: Vamshi Surabhi <0x777@users.noreply.github.com>

commit 24592a516b2e920d3d41244b0aac4c060dc321ae
Author: Lyndon Maydwell <lyndon@sordina.net>
Date:   Wed Jul 15 05:00:58 2020 +1000

    Pass environment variables around as a data structure, via @sordina (#5374)

    * Pass environment variables around as a data structure, via @sordina

    * Resolving build error

    * Adding Environment passing note to changelog

    * Removing references to ILTPollerLog as this seems to have been reintroduced from a bad merge

    * removing commented-out imports

    * Language pragmas already set by project

    * Linking async thread

    * Apply suggestions from code review

    Use `runQueryTx` instead of `runLazyTx` for queries.

    * remove the non-user facing entry in the changelog

    Co-authored-by: Phil Freeman <paf31@cantab.net>
    Co-authored-by: Phil Freeman <phil@hasura.io>
    Co-authored-by: Vamshi Surabhi <0x777@users.noreply.github.com>

commit 505ac06d9ec8439e88d360c2aa4bfc3e65f22f8c
Author: Phil Freeman <phil@hasura.io>
Date:   Mon Jul 13 22:56:53 2020 -0700

    Expose all modules in Cabal file (#5371)

commit 0ef52292b5c8b5ac129dd877b8b8d913089c12b3
Author: Karthikeyan Chinnakonda <karthikeyan@hasura.io>
Date:   Fri Jul 10 22:17:05 2020 +0530

    server: call the webhook asynchronously in event triggers (#5352)

    * server: call the webhook asynchronosly in event triggers

commit 9ef6de51133342acca3857c4392c6d853d3256ea
Author: Karthikeyan Chinnakonda <karthikeyan@hasura.io>
Date:   Fri Jul 3 06:25:07 2020 +0530

    server: include additional fields in scheduled trigger webhook payload (#5262)

    * include scheduled triggers metadata in the webhook body

    Co-authored-by: Tirumarai Selvan <tiru@hasura.io>

commit 9e423a3c5574a3fbfaade8cc14b62b87dc05e3ec
Author: Brandon Simmons <brandon.m.simmons@gmail.com>
Date:   Thu Jul 2 10:55:46 2020 -0400

    Fix buggy parsing of new --conn-lifetime flag in 2b0e3774

commit 97b1155bf83bbed223c763c681b88abfac5521e0
Author: Karthikeyan Chinnakonda <karthikeyan@hasura.io>
Date:   Thu Jul 2 17:27:09 2020 +0530

    server: unlock scheduled events on graceful shutdown (#4928)

commit 9ccbd1c0f6b4816f954b1a9e0eef168625dbaecb
Author: Vamshi Surabhi <0x777@users.noreply.github.com>
Date:   Thu Jul 2 12:11:08 2020 +0530

    bump pg-client-hs version (fixes a build issue on some environments) (#5267)

commit d464208515ef6649bde5d7266fd783ad488dc859
Merge: a78f17b7 cfffade1
Author: Vamshi Surabhi <0x777@users.noreply.github.com>
Date:   Thu Jul 2 10:50:25 2020 +0530

    Merge pull request #5255 from 0x777/issue-2012-mutations-no-prepared-statements

    do not use prepared statements for mutations, close #2012

commit cfffade11589488cfae356e35e735f53df23ae6e
Author: Vamshi Surabhi <vamshi@hasura.io>
Date:   Wed Jul 1 17:44:19 2020 +0530

    do not use prepared statements for mutations

commit 2b0e3774a3fa00d23aa0e9ee9b43767b536ba54d
Author: Brandon Simmons <brandon@hasura.io>
Date:   Tue Jun 30 23:53:10 2020 -0400

    5087 libpq pool leak (#5089)

    Shrink libpq buffers to 1MB before returning connection to pool. Closes #5087

    See: https://github.com/hasura/pg-client-hs/pull/19

    Also related: #3388 #4077

commit 93104e616f53ed46503577032c9eacf9be31575a
Merge: 6c689992 1dbe5cd1
Author: Brandon Simmons <brandon@hasura.io>
Date:   Fri Jun 26 18:24:53 2020 -0400

    Merge pull request #5214 from jberryman/5190-improve-websockets-idle-memory-v2-only-kc8

    Lower stack chunk size in RTS to reduce thread STACK memory (closes #5190)

commit 1dbe5cd1ab4a68dd2518f9e57a656517f708e900
Merge: f9b5b838 6c689992
Author: Brandon Simmons <brandon@hasura.io>
Date:   Fri Jun 26 15:02:49 2020 -0400

    Merge branch 'master' into 5190-improve-websockets-idle-memory-v2-only-kc8

commit f9b5b8382cbd41a589d1096c720805d3184153d4
Author: Brandon Simmons <brandon.m.simmons@gmail.com>
Date:   Tue Jun 23 20:35:36 2020 -0400

    Lower stack chunk size in RTS to reduce thread STACK memory (closes #5190)

    This reduces memory consumption for new idle subscriptions significantly
    (see linked ticket).

    The hypothesis is: we fork a lot of threads per websocket, and some of
    these use slightly more than the initial 1K stack size, so the first
    overflow balloons to 32K, when significantly less is required.

    However: running with `+RTS -K1K -xc` did not seem to show evidence of
    any overflows! So it's a mystery why this improves things.

    GHC should probably also be doubling the stack buffer at each overflow
    or doing something even smarter; the knobs we have aren't so helpful.

commit 6a58c144f540508e3a75c977585577e0b757d550
Author: Karthikeyan Chinnakonda <karthikeyan@hasura.io>
Date:   Tue Jun 23 20:51:34 2020 +0530

    server: fix updating of headers behaviour in the update cron trigger API and create future events immediately (#5151)

    * server: fix bug to update headers in an existing cron trigger and create future events

    Co-authored-by: Tirumarai Selvan <tiru@hasura.io>

(Done, but we should re-visit this, if we do query plan caching)
commit 20cbe9cfd3e90b91d3f4faf370b081fc3859cbde
Author: Auke Booij <auke@hasura.io>
Date:   Mon May 18 14:27:56 2020 +0200

    server: fix an introspection query caching issue (fix #4547) (#4661)

    Introspection queries accept variables, but we need to make sure to
    also touch the variables that we ignore, so that an introspection
    query is marked not reusable if we are not able to build a correct
    query plan for it.

    A better solution here would be to deal with such unused variables
    correctly, so that more introspection queries become reusable.

    An even better solution would be to type-safely track *how* to reuse
    which variables, rather than to split the reusage marking from the
    planning.

    Co-authored-by: Tirumarai Selvan <tiru@hasura.io>
